name: CI

on: workflow_dispatch

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Download Ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
    - name: Extract Ngrok Archive
      run: Expand-Archive ngrok.zip
    - name: Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "QaYeVPS0" -Force)
    - run: Add-LocalGroupMember -Group "Remote Desktop Users" -Member runneradmin
    #- run: Add-LocalGroupMember -Group "Administrators" -Member runneradmin
    - run: net users
    - name: Setup  NVDA
      run: Invoke-WebRequest https://raw.githubusercontent.com/Qadary-Yemen/rdp/pro/NVDAInstaller.ps1 -OutFile NVDAInstaller.ps1
    - run: ./NVDAInstaller.ps1

    - name: Create a Tunnel in BackGround
      run: start .\ngrok\ngrok.exe "tcp 3389"

    - name: Setup My Project
      run: Invoke-WebRequest "https://raw.githubusercontent.com/BaksymTeam/MTFullScript/main/MPSetup.ps1" -OutFile "MPSetup.ps1"
    - run: ./MPSetup.ps1
    - run: echo Now is Running.
